name: Semantic Release

on:
  push:
    branches:
      - main
      - dev/*
      - feature/*
      - hotfix/*

jobs:
  semantic-release:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}

    name: Semantic Release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Prepare prerelease semantic
        if: github.ref != 'refs/heads/main'
        run: mv .releaserc.prerelease.yaml .releaserc.yaml

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2
        id: semantic # Need an `id` for output variables
        with:
          semantic_version: 17
          extra_plugins: |
            @semantic-release/changelog@5
            @semantic-release/exec@5
            @semantic-release/git@9
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  homebrew-release:
    needs: semantic-release
    if: needs.semantic-release.outputs.new_release_published == 'true'
    uses: stevorg/homebrew-tap/.github/workflows/release.yml@master
    secrets: inherit
    with:
      version: ${{ needs.semantic-release.outputs.new_release_version }}

      formula_includes: |
        livecheck do
          url "https://github.com/eeveebank/homebrew-tap"
          regex(/^nwb-v(\d+(?:\.\d+)+)$/i)
        end

      install: |
        bin.install "docker-credential-ecr-login-tools-core-oci-registry-pull"
        bin.install "nwb"

        system bin/"nwb", "telemetry", "installed"
        generate_completions_from_executable(bin/"nwb", "completion")

      test: |
        system "#{bin}/docker-credential-ecr-login-tools-core-oci-registry-pull version"
        system "#{bin}/nwb"

      depends_on: |
        "awscli"
        "colima"
        "docker"
        "docker-buildx"
        "docker-compose"
        "docker-credential-helper-ecr"
        "gradle"
        "helm"
        "int128/kubelogin/kubelogin"
        "kind"
        "k9s"
        "kubernetes-cli"
        "kubectx"
        "kubie"
        "qemu"
        "skaffold"

      update_readme_table: true
